{"remainingRequest":"E:\\Vueworkspace\\blog\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Vueworkspace\\blog\\node_modules\\vuepress-theme-meteorlxy\\lib\\components\\Pagination.vue?vue&type=style&index=0&id=826a7324&lang=stylus&scoped=true&","dependencies":[{"path":"E:\\Vueworkspace\\blog\\node_modules\\vuepress-theme-meteorlxy\\lib\\components\\Pagination.vue","mtime":499162500000},{"path":"E:\\Vueworkspace\\blog\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Vueworkspace\\blog\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\Vueworkspace\\blog\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\Vueworkspace\\blog\\node_modules\\stylus-loader\\index.js","mtime":1519606876000},{"path":"E:\\Vueworkspace\\blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Vueworkspace\\blog\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpAcmVxdWlyZSAnfkB0aGVtZS9zdHlsZXMvdmFyaWFibGVzJwoKLnBhZ2luYXRpb24KICBkaXNwbGF5IGZsZXgKICBmbGV4LXdyYXAgd3JhcAogIGp1c3RpZnktY29udGVudCBjZW50ZXIKICBsaXN0LXN0eWxlIG5vbmUKICBtYXJnaW4gYXV0bwogIHBhZGRpbmcgMAogIGJvcmRlci10b3AgMXB4ICRib3JkZXJDb2xvciBzb2xpZAogIC5wYWdlLWl0ZW0KICAgIHBhZGRpbmcgMC41cmVtCiAgICAmLmRpc2FibGVkCiAgICAgIHBvaW50ZXItZXZlbnRzIG5vbmUKICAgICYuYWN0aXZlCiAgICAgIGN1cnNvciBkZWZhdWx0CiAgICAgIGNvbG9yICRhY2NlbnRDb2xvcgogICAgICBmb250LXdlaWdodCBib2xkCiAgICAmOm5vdCguYWN0aXZlKQogICAgICBjb2xvciAkdGV4dENvbG9yCiAgICAgIGN1cnNvciBwb2ludGVyCg=="},{"version":3,"sources":["Pagination.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6KA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Pagination.vue","sourceRoot":"node_modules/vuepress-theme-meteorlxy/lib/components","sourcesContent":["<template>\n  <ul class=\"pagination\">\n    <!--Prev Button-->\n    <li\n      :class=\"{ disabled: onFirstPage }\"\n      class=\"page-item\"\n      @click.prevent=\"prevPage\"\n    >\n      <span>&laquo;</span>\n    </li>\n    <!--Page Buttons-->\n    <li\n      v-for=\"paginator in paginators\"\n      :key=\"paginator.value\"\n      :class=\"{ active: paginator.value === currentPage, disabled: !paginator.enable}\"\n      class=\"page-item\"\n      @click.prevent=\"setPage(paginator.value)\"\n    >\n      <span>{{ paginator.value }}</span>\n    </li>\n\n    <!--Next Button-->\n    <li\n      :class=\"{ disabled: onLastPage }\"\n      class=\"page-item\"\n      @click.prevent=\"nextPage\"\n    >\n      <span>&raquo;</span>\n    </li>\n  </ul>\n</template>\n\n<script>\nexport default {\n  name: 'Pagination',\n\n  props: {\n    value: {\n      type: Number,\n      default: 1,\n      validator: val => val > 0,\n    },\n\n    total: {\n      type: Number,\n      required: true,\n      validator: val => val > 0,\n    },\n\n    eachSide: {\n      type: Number,\n      default: 1,\n      validator: val => val >= 0,\n    },\n  },\n\n  computed: {\n    firstPage () {\n      return 1\n    },\n\n    lastPage () {\n      return this.total\n    },\n\n    onFirstPage () {\n      return this.currentPage === this.firstPage\n    },\n\n    onLastPage () {\n      return this.currentPage === this.lastPage\n    },\n\n    currentPage () {\n      return this.value\n    },\n\n    paginators () {\n      const paginators = []\n      if (this.lastPage < this.eachSide * 2 + 4) {\n        for (let i = this.firstPage; i < this.lastPage + 1; ++i) {\n          paginators.push({\n            value: i,\n            enable: true,\n          })\n        }\n      } else {\n        if (this.currentPage - this.firstPage < this.eachSide + 2) {\n          // if currentPage near firstPage\n          for (let i = this.firstPage; i < Math.max(this.eachSide * 2 + 1, this.currentPage + this.eachSide + 1); ++i) {\n            paginators.push({\n              value: i,\n              enable: true,\n            })\n          }\n          paginators.push({\n            value: '...',\n            enable: false,\n          })\n          paginators.push({\n            value: this.lastPage,\n            enable: true,\n          })\n        } else if (this.lastPage - this.currentPage < this.eachSide + 2) {\n          // if currentPage near lastPage\n          paginators.push({\n            value: this.firstPage,\n            enable: true,\n          })\n          paginators.push({\n            value: '...',\n            enable: false,\n          })\n          for (let i = Math.min(this.lastPage - this.eachSide * 2 + 1, this.currentPage - this.eachSide); i < this.lastPage + 1; ++i) {\n            paginators.push({\n              value: i,\n              enable: true,\n            })\n          }\n        } else {\n          // if currentPage in the middle\n          paginators.push({\n            value: this.firstPage,\n            enable: true,\n          })\n          paginators.push({\n            value: '...',\n            enable: false,\n          })\n          for (let i = this.currentPage - this.eachSide; i < this.currentPage + this.eachSide + 1; ++i) {\n            paginators.push({\n              value: i,\n              enable: true,\n            })\n          }\n          paginators.push({\n            value: '...',\n            enable: false,\n          })\n          paginators.push({\n            value: this.lastPage,\n            enable: true,\n          })\n        }\n      }\n      return paginators\n    },\n  },\n\n  methods: {\n    nextPage () {\n      this.setPage(this.currentPage + 1)\n    },\n\n    prevPage () {\n      this.setPage(this.currentPage - 1)\n    },\n\n    setPage (targetPage) {\n      if (targetPage <= this.lastPage && targetPage >= this.firstPage) {\n        this.$emit('input', targetPage)\n\n        // update zooming after page navigation\n        this.$nextTick(() => {\n          this.$vuepress.zooming.updateDelay()\n        })\n      }\n    },\n  },\n}\n</script>\n\n<style lang=\"stylus\" scoped>\n@require '~@theme/styles/variables'\n\n.pagination\n  display flex\n  flex-wrap wrap\n  justify-content center\n  list-style none\n  margin auto\n  padding 0\n  border-top 1px $borderColor solid\n  .page-item\n    padding 0.5rem\n    &.disabled\n      pointer-events none\n    &.active\n      cursor default\n      color $accentColor\n      font-weight bold\n    &:not(.active)\n      color $textColor\n      cursor pointer\n</style>\n"]}]}